/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-02-15 04:49:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.dao.EducationDao;
import com.pojo.EducationPojo;

public final class education_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/message.jsp", Long.valueOf(1705681954228L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.pojo.EducationPojo");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.dao.EducationDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String value = (String) session.getAttribute("login");
if (value == null) {
	response.sendRedirect("login.jsp");
	return;
}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Education Details</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"message-container\">\r\n");
      out.write("		");
      out.write('\r');
      out.write('\n');

	String message =(String) session.getAttribute("msg");
	if(message!= null){
		
		if(message.equals("Message sent successfully")){

      out.write("\r\n");
      out.write("		<h1 style=\"text-align: center; color: blue\">");
      out.print(message );
      out.write("</h1>\r\n");

		}
		else{

      out.write("\r\n");
      out.write("		<h1 style=\"text-align: center; color: red\">");
      out.print(message );
      out.write("</h1>\r\n");

		}
	}
	session.removeAttribute("msg");

      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<form action=\"Education\" method=\"post\">\r\n");
      out.write("		Institution name <input type=\"text\" name=\"institution\"\r\n");
      out.write("			placeholder=\"School/College name\"><br> Degree <input\r\n");
      out.write("			type=\"text\" name=\"degree\" placeholder=\"Add Degree\"><br>\r\n");
      out.write("		Year of completion <input type=\"text\" name=\"year\" placeholder=\"Year\"><br>\r\n");
      out.write("		Description <input type=\"text\" name=\"desc\"\r\n");
      out.write("			placeholder=\"Add Description\"><br>\r\n");
      out.write("		<button>Submit</button>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	");

	ArrayList<Object> al = new EducationDao().read();
	for (int in = al.size() - 1; in >= 0; in--) {
		EducationPojo e = (EducationPojo) al.get(in);
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"education-item\">\r\n");
      out.write("		<form action=\"Education\" method=\"post\">\r\n");
      out.write("			<input type=\"hidden\" name=\"check\" value=\"update\"> <input\r\n");
      out.write("				type=\"hidden\" name=\"sn\" value=\"");
      out.print(e.getSn());
      out.write("\">\r\n");
      out.write("			<div>\r\n");
      out.write("				Institution name: <input type=\"text\" name=\"institution\"\r\n");
      out.write("					value=\"");
      out.print(e.getInstitution());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				Degree: <input type=\"text\" name=\"degree\" value=\"");
      out.print(e.getDegree());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				Year of completion: <input type=\"text\" name=\"year\"\r\n");
      out.write("					value=\"");
      out.print(e.getYear());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				Description: <input type=\"text\" name=\"desc\" value=\"");
      out.print(e.getDesc());
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<button>Update</button>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<form action=\"Education\" method=\"post\">\r\n");
      out.write("		<input type=\"hidden\" name=\"check\" value=\"delete\">\r\n");
      out.write("		<input type=\"hidden\" name=\"sn\" value=\"");
      out.print(e.getSn());
      out.write("\">\r\n");
      out.write("		<button>Delete</button>\r\n");
      out.write("	\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
