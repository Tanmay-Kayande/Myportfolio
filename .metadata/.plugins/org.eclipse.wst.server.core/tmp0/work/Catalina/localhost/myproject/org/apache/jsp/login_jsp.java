/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-01-19 16:32:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/message.jsp", Long.valueOf(1705681954228L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>login with overlay image - Bootdey.com</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("	background: #f6f9fc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".account-block {\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	background-image: url(https://bootdey.com/img/Content/bg1.jpg);\r\n");
      out.write("	background-repeat: no-repeat;\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".account-block .overlay {\r\n");
      out.write("	-webkit-box-flex: 1;\r\n");
      out.write("	-ms-flex: 1;\r\n");
      out.write("	flex: 1;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	bottom: 0;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	right: 0;\r\n");
      out.write("	background-color: rgba(0, 0, 0, 0.4);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".account-block .account-testimonial {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 0 1.75rem;\r\n");
      out.write("	bottom: 3rem;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	right: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text-theme {\r\n");
      out.write("	color: #5369f8 !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-theme {\r\n");
      out.write("	background-color: #5369f8;\r\n");
      out.write("	border-color: #5369f8;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"main-wrapper\" class=\"container\">\r\n");
      out.write("		<div class=\"row justify-content-center\">\r\n");
      out.write("			<div class=\"col-xl-10\">\r\n");
      out.write("				<div class=\"card border-0\">\r\n");
      out.write("					<div class=\"card-body p-0\">\r\n");
      out.write("						<div class=\"row no-gutters\">\r\n");
      out.write("							<div class=\"col-lg-6\">\r\n");
      out.write("								<div class=\"p-5\">\r\n");
      out.write("									<div class=\"mb-5\">\r\n");
      out.write("										<h3 class=\"h4 font-weight-bold text-theme\">Login</h3>\r\n");
      out.write("									</div>\r\n");
      out.write("									<h6 class=\"h5 mb-0\">Welcome back!</h6>\r\n");
      out.write("									<p class=\"text-muted mt-2 mb-5\">Enter your username\r\n");
      out.write("										and password to access admin panel.</p>\r\n");
      out.write("									<form action=\"Auth\" method=\"post\">\r\n");
      out.write("										<div class=\"form-group\">\r\n");
      out.write("											<label for=\"exampleInputEmail1\">Username</label> \r\n");
      out.write("							<input name=\"username\" type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\">\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"form-group mb-5\">\r\n");
      out.write("											<label for=\"exampleInputPassword1\">Password</label> \r\n");
      out.write("							<input name=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n");
      out.write("										</div>\r\n");
      out.write("										<button type=\"submit\" class=\"btn btn-theme\">Login</button>\r\n");
      out.write("									</form>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"col-lg-6 d-none d-lg-inline-block\">\r\n");
      out.write("								<div class=\"account-block rounded-right\">\r\n");
      out.write("									<div class=\"overlay rounded-right\"></div>\r\n");
      out.write("									<div class=\"account-testimonial\">\r\n");
      out.write("										");
      out.write('\r');
      out.write('\n');

	String message =(String) session.getAttribute("msg");
	if(message!= null){
		
		if(message.equals("Message sent successfully")){

      out.write("\r\n");
      out.write("		<h1 style=\"text-align: center; color: blue\">");
      out.print(message );
      out.write("</h1>\r\n");

		}
		else{

      out.write("\r\n");
      out.write("		<h1 style=\"text-align: center; color: red\">");
      out.print(message );
      out.write("</h1>\r\n");

		}
	}
	session.removeAttribute("msg");

      out.write("\r\n");
      out.write("										<h4 class=\"text-white mb-4\">Enter your Credentials!</h4>\r\n");
      out.write("										<p class=\"lead text-white\">\"Best investment i made for a\r\n");
      out.write("											long time. Can only recommend it for other users.\"</p>\r\n");
      out.write("										<p>- Admin User</p>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-1.10.2.min.js\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
